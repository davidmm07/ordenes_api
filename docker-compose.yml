version: '3.4'

services:
  api:
    build: ./go_build
    image: ${SERVICE_NAME}
    container_name: ${SERVICE_NAME}
    volumes:
      - gosrc:/go
      - .:/go/src/${API_BASE_DIR}/${API_NAME}
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    environment:
      - SERVICE_TAGS=traefik.enable=true,traefik.frontend.entryPoints=http,traefik.frontend.rule=Host:${SERVICE_NAME}.localhost   
    command: sh -c 'cd ${API_BASE_DIR}/${API_NAME};go get github.com/codegangsta/gin; go get -v ./... ;gin -i -a ${PORT} run main.go'
    depends_on: 
      - db
    networks:
      - back_end

  db:
    image: postgres:10-alpine
    container_name: ${ORDENES_DB_HOST}
    environment:
      - POSTGRES_HOST=${ORDENES_DB_HOST}
      - POSTGRES_DB=${ORDENES_DB_NAME}
      - POSTGRES_USER=${ORDENES_DB_USER}
      - POSTGRES_PASSWORD=${ORDENES_DB_PASS}
    volumes:
      - ordenes_data:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}:5432
    networks:
      - back_end

volumes:
  gosrc:
  ordenes_data:
networks:
  back_end:
    external: true